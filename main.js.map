{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/calculators/calculator-input/calculator-input.component.ts","./src/app/calculators/calculators.component.ts","./src/app/calculators/calculators.component.html","./src/app/calculators/stock-return-calculator/stock-return-calculator.component.ts","./src/app/calculators/stock-return-calculator/stock-return-calculator.component.html","./src/app/main-page/footer/footer.component.ts","./src/app/main-page/footer/footer.component.html","./src/app/main-page/top-navbar/top-navbar.component.ts","./src/app/main-page/top-navbar/top-navbar.component.html","./src/app/material/material.module.ts","./src/app/services/stock-data-service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'analysis';\r\n}\r\n","<app-top-navbar></app-top-navbar>\r\n<app-calculators></app-calculators>\r\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CalculatorInputComponent } from './calculators/calculator-input/calculator-input.component';\r\nimport { CalculatorsComponent } from './calculators/calculators.component';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { StockReturnCalculatorComponent } from './calculators/stock-return-calculator/stock-return-calculator.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { TopNavbarComponent } from './main-page/top-navbar/top-navbar.component';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { FooterComponent } from './main-page/footer/footer.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CalculatorInputComponent,\r\n    CalculatorsComponent,\r\n    StockReturnCalculatorComponent,\r\n    TopNavbarComponent,\r\n    FooterComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatTableModule,\r\n    NgxChartsModule,\r\n    FlexLayoutModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { StockDataService, IStock } from 'src/app/services/stock-data-service';\r\n\r\n@Component({\r\n  selector: 'app-calculator-input',\r\n  templateUrl: './calculator-input.component.html',\r\n  styleUrls: ['./calculator-input.component.scss']\r\n})\r\nexport class CalculatorInputComponent implements OnInit {\r\n\r\n  constructor(private stockDataService: StockDataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.toDate = new Date(\"2020-07-20\");\r\n    this.fromDate = new Date(\"1930-05-04\");\r\n    this.stocks = this.stockDataService.getStocks();\r\n    this.selectedStock = this.stocks[0]\r\n  }\r\n\r\n  @Output() onSubmit: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  stocks: IStock[];\r\n  selectedStock : IStock;\r\n  toDate : Date = new Date();\r\n  fromDate : Date  = new Date();\r\n  precisionOptions: number[] = [2,1,.5,.2,]\r\n  precision: number;\r\n\r\n  dropdownChanged(val) : void {\r\n    this.selectedStock = val;\r\n    console.log(this.selectedStock);\r\n  }\r\n  \r\n  toDatepickerChanged(newDate) : void {\r\n    this.toDate = new Date(newDate);\r\n    console.log(\"changed todate\");\r\n  }\r\n  fromDatepickerChanged(newDate) : void {\r\n    this.fromDate = new Date(newDate);\r\n    console.log(\"Changed fromdate\");\r\n  }\r\n  async submitInput() {\r\n    this.stockDataService.getStockPrices(this.selectedStock, this.toDate, this.fromDate).subscribe(async result => {\r\n      var stockPrices = await result;\r\n      console.log(\"From the input page, here are the stock prices:\");\r\n      console.log(stockPrices);\r\n      this.onSubmit.emit(stockPrices);\r\n    });\r\n    \r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Injectable} from '@angular/core';\r\nimport {HttpResponse} from '@angular/common/http';\r\nimport {Http} from '@angular/http';\r\nimport {Observable} from 'rxjs';\r\nimport {StockDataService} from '../services/stock-data-service'\r\n@Component({\r\n  selector: 'app-calculators',\r\n  templateUrl: './calculators.component.html',\r\n  styleUrls: ['./calculators.component.scss']\r\n})\r\nexport class CalculatorsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n}\r\n","<mat-card style=\"text-align: center; height:50rem\" class=\"primaryColorBG\">\r\n    <div class='card-body'  style=\"width: 80%; display: inline-block\">\r\n        <mat-tab-group>\r\n            <mat-tab label=\"Stock Return Calculator\" ><app-stock-return-calculator></app-stock-return-calculator></mat-tab>\r\n            <mat-tab label=\"calc2\" ><div style=\"height:45rem;line-height:45rem\" >This is the second calculator.</div></mat-tab>\r\n        </mat-tab-group>\r\n    </div>\r\n</mat-card>","import { Component, OnInit, Input, OnChanges, SimpleChanges, EventEmitter, ViewChild } from '@angular/core';\r\nimport { ICalculator } from '../models/ICalculator';\r\nimport { IStock, IStockDataRow, StockDataService } from 'src/app/services/stock-data-service';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { RouterLinkWithHref } from '@angular/router';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\n\r\n@Component({\r\n  selector: 'app-stock-return-calculator',\r\n  templateUrl: './stock-return-calculator.component.html',\r\n  styleUrls: ['./stock-return-calculator.component.scss']\r\n})\r\nexport class StockReturnCalculatorComponent implements OnInit, OnChanges, ICalculator {\r\n\r\n  constructor(private stockDataService: StockDataService) { }\r\n  finalPercentages : IDisplayReturnsDataRow[]= [\r\n    {percent: .20, return: .08},\r\n    {percent: .80, return: .15}\r\n  ];\r\n  // The interval in years to analyze a return over\r\n  intervalToAnalyze = 30;\r\n  precision : number = 1; // 1 means round to nearest whole percent, .5 to nearest .5 percent, etc.\r\n  precisionOptions: number[] =  [2,1,.5,.2, .1];\r\n  stocks: IStock[];\r\n  selectedStock : IStock;\r\n  toDate : Date = new Date();\r\n  fromDate : Date  = new Date();\r\n  graphData;\r\n  graph = {\r\n    view: null,//[700, 400],\r\n    // options\r\n    showXAxis: true,\r\n    showYAxis: true,\r\n    gradient: false,\r\n    showLegend: false,\r\n    showXAxisLabel: true,\r\n    xAxisLabel: 'Return',\r\n    showYAxisLabel: true,\r\n    yAxisLabel: 'Chance(%)',\r\n    colorScheme : {\r\n      domain: ['#039be5']\r\n    },\r\n  }\r\n  onGraphSelect(event) {\r\n    console.log(event);\r\n  }\r\n  ngOnInit(): void {\r\n    this.toDate = new Date(\"2020-07-20\");\r\n    this.fromDate = new Date(\"1930-05-04\");\r\n    this.stocks = this.stockDataService.getStocks();\r\n    this.selectedStock = this.stocks[0];\r\n    this.submitInput();\r\n  }\r\n  toDatepickerChanged(newDate) : void {\r\n    this.toDate = new Date(newDate);\r\n  }\r\n  fromDatepickerChanged(newDate) : void {\r\n    this.fromDate = new Date(newDate);\r\n  }\r\n  dropdownChanged(val) : void {\r\n    this.selectedStock = val;\r\n    console.log(\"Changed selected stock:\");\r\n    console.log(this.selectedStock);\r\n  }\r\n  ngOnChanges(changes: SimpleChanges) {\r\n\r\n  }\r\n  stockPrices : IStockDataRow[];\r\n  @ViewChild('viewTable') viewTable: MatTable<any>;\r\n\r\n  \r\n  async submitInput() {\r\n    this.stockDataService.getStockPrices(this.selectedStock, this.toDate, this.fromDate).subscribe(async (result) => {\r\n      this.stockPrices = await result;\r\n      this.runCalculator();\r\n    })\r\n    \r\n  }\r\n\r\n  runCalculator() {\r\n    let stockPrices : IStockDataRow[]= this.stockPrices;\r\n    var last = stockPrices.length - 1;\r\n    if (last - this.intervalToAnalyze * 253 <= 0 ) {\r\n      alert(\"Sorry, this interval is longer than the history of the selected stock.\");\r\n      return;\r\n    }\r\n    //1. Find the return on each n year interval, store in a list. \r\n    var returns : number[] = [];\r\n    console.log(\"from 0 to \" + (last - this.intervalToAnalyze * 253));\r\n    console.log(\"Length of prices: \" + stockPrices.length)\r\n    for (var i = 0; i < last - this.intervalToAnalyze * 253; i++) {\r\n      returns.push(this.calculateAnnualizedReturn(stockPrices[i], stockPrices[i+Math.floor(this.intervalToAnalyze * 252.25)]));\r\n    }\r\n\r\n    let roundedReturns : number[] = []\r\n    for (let row of returns) {\r\n      roundedReturns.push(Math.floor(row * 100 / this.precision) * this.precision);\r\n    }\r\n    //2. Process each return, categorize it using precision\r\n    var returnsDict = {};\r\n    for (let ret of roundedReturns) {\r\n      if (ret in returnsDict) \r\n        returnsDict[ret] += 1;\r\n      else\r\n        returnsDict[ret] = 1;\r\n    }\r\n    let total = returns.length;\r\n    console.log(\"dictionary :\");\r\n    console.log(returnsDict);\r\n    let finalPercentages = [];\r\n    for (var key in returnsDict) {\r\n      finalPercentages.push({percent: (returnsDict[key] / total), return: parseFloat(key)})\r\n      //console.log(key, returnsDict[key]);\r\n    }\r\n    //console.log(finalPercentages);\r\n    this.finalPercentages = finalPercentages.sort((a,b) => (a.return > b.return) ? 1 : -1);\r\n    if (this.viewTable != null)\r\n      this.viewTable.renderRows();\r\n    \r\n    this.graphData = [];\r\n    for (var row of this.finalPercentages) {\r\n        let displayName = (row.return) + \"-\" + (row.return + this.precision - .001) + \"%\";\r\n        this.graphData.push({\"name\":displayName, \"value\":row.percent * 100})\r\n    }\r\n    console.log(this.graphData);\r\n    \r\n  }\r\n\r\n  // Takes 2 stock data rows, and returns the annualized return.\r\n  // The incoming rows have two elements: the date, and the price\r\n  calculateAnnualizedReturn(start : IStockDataRow, end : IStockDataRow) : number{\r\n    const MS_PER_YEAR = 1000 * 60 * 60 * 24 * 365;\r\n    var ret = (end.price) / start.price;\r\n    var years = (end.date.getTime() - start.date.getTime()) / MS_PER_YEAR;\r\n    let annualizedReturn = Math.pow(ret, 1/years) - 1\r\n    return annualizedReturn;\r\n  }\r\n  precisionChanged(val) : void {\r\n    this.precision = val;\r\n    this.runCalculator();\r\n  }\r\n  intervalChanged(val) : void {\r\n    this.intervalToAnalyze = val;\r\n    this.runCalculator();\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport interface IDisplayReturnsDataRow {\r\n  percent : number,\r\n  return : number\r\n}\r\n\r\n","<!-- Calculator specific inputs-->\r\n<table>\r\n    <tr>\r\n        <mat-card color=\"primary\" class=\"primaryColorBG\">\r\n        <td>\r\n            <mat-form-field appearance=\"fill\" style=\"margin-right: 10px; height:10px\">\r\n                <mat-label>Stock</mat-label>\r\n                <mat-select appearance=\"fill\" (selectionChange)=\"dropdownChanged($event.value)\">\r\n                    <mat-option *ngFor=\"let stock of stocks\" [value]=\"stock\">\r\n                    {{stock.name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        \r\n            <mat-form-field  class=\"primaryColorBG\" appearance=\"fill\" style=\"margin-right: 10px\">\r\n                <mat-label>From</mat-label>\r\n                <input matInput [matDatepicker]=\"pickerFrom\" (change)=\"fromDatepickerChanged($event.target.value)\" value=\"1930-05-04\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"pickerFrom\"></mat-datepicker-toggle>\r\n                <mat-datepicker #pickerFrom></mat-datepicker>\r\n            </mat-form-field>\r\n        \r\n            <mat-form-field class=\"primaryColorBG\" appearance=\"fill\" style=\"margin-right: 10px\">\r\n                <mat-label>To</mat-label>\r\n                <input matInput [matDatepicker]=\"pickerTo\" (change)=\"toDatepickerChanged($event.target.value)\" value=\"2020-07-20\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"pickerTo\"></mat-datepicker-toggle>\r\n                <mat-datepicker #pickerTo></mat-datepicker>\r\n            </mat-form-field>\r\n           <mat-form-field appearance=\"fill\" style=\"width:10%;height:10px;margin-right:10px\" matTooltip=\"The intervals displayed on the graph. Ex. .5 will show every range of .5 percent\">\r\n                <mat-label>Precision</mat-label>\r\n                <mat-select (selectionChange)=\"this.precisionChanged($event.value)\" > \r\n                    <mat-option *ngFor=\"let num of this.precisionOptions\" [value]=\"num\">\r\n                        {{num}}\r\n                        </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field appearance=\"fill\" style=\"width:57px;margin-right:10px;\" >\r\n                <mat-label>Interval</mat-label>\r\n                <input matInput (change)=\"intervalChanged($event.target.value)\" value=\"30\" matTooltip=\"the number of years in each interval analyzed\"> \r\n              </mat-form-field>\r\n            <button mat-raised-button color=\"accent\" (click)=\"submitInput()\">Submit</button>\r\n        </td>\r\n        </mat-card>\r\n    </tr>\r\n    <tr>\r\n        <td style=\"width:50%\">\r\n            <mat-card class=\"accentColorBG\"> Here you see an analysis of the entire selected time range, calculating the annualized return from every possible interval of {{this.intervalToAnalyze}} years.\r\n            This graph shows the chance you had of getting different Return on Investments (ROI) over this time period. (A taller bar means a higher chance of getting that ROI). <p>The below calculation runs from {{this.fromDate.toISOString().split('T')[0]}} to {{this.toDate.toISOString().split('T')[0]}}, analyzing prices on the {{this.selectedStock.name}}.</p>\r\n           \r\n            </mat-card>\r\n        </td>\r\n    </tr>\r\n</table>\r\n<div style=\"width:95%; height:32rem\" class=\"primaryColorBG\">\r\n    <mat-card style=\"text-align: center\" class=\"primaryColorBG\" >\r\n        <div class='card-body'>\r\n            <mat-tab-group style=\"width:100%;height:100%\">\r\n                <mat-tab label=\"bar graph\" style=\"width:100%;height:100%\">\r\n                    <ngx-charts-bar-vertical\r\n                        [view]=\"graph.view\"\r\n                        [scheme]=\"graph.colorScheme\"\r\n                        [results]=\"graphData\"\r\n                        [gradient]=\"graph.gradient\"\r\n                        [xAxis]=\"graph.showXAxis\"\r\n                        [yAxis]=\"graph.showYAxis\"\r\n                        [legend]=\"graph.showLegend\"\r\n                        [showXAxisLabel]=\"graph.showXAxisLabel\"\r\n                        [showYAxisLabel]=\"graph.showYAxisLabel\"\r\n                        [xAxisLabel]=\"graph.xAxisLabel\"\r\n                        [yAxisLabel]=\"graph.yAxisLabel\">\r\n                    </ngx-charts-bar-vertical>\r\n                </mat-tab>\r\n                <mat-tab label=\"box and whisker plot\" ><div style=\"width:100%;height:100%\">This is the box and whisker plot</div></mat-tab>\r\n            </mat-tab-group>\r\n        </div>\r\n    </mat-card>\r\n    <!-- Trying new graph stuff -->\r\n    \r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\" class=\"primaryColorBG\" style=\"height:50rem\">\n\n</div>>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top-navbar',\n  templateUrl: './top-navbar.component.html',\n  styleUrls: ['./top-navbar.component.css']\n})\nexport class TopNavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"accent\">\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n      <mat-icon>local_fire_department</mat-icon>\n    </button>\n    <span>Investment Calculators</span>\n    <span class=\"example-spacer\"></span>\n    <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n      <mat-icon>share</mat-icon>\n    </button>\n</mat-toolbar>","import { ModuleWithProviders, NgModule} from \"@angular/core\";\r\nimport { MAT_LABEL_GLOBAL_OPTIONS, MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatAutocompleteModule,\r\n        MatBadgeModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatStepperModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatExpansionModule,\r\n        MatFormFieldModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatTreeModule,\r\n        MatNativeDateModule\r\n    ],\r\n    exports: [\r\n        MatAutocompleteModule,\r\n        MatBadgeModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatStepperModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatExpansionModule,\r\n        MatFormFieldModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatTreeModule,\r\n        MatNativeDateModule\r\n    ],\r\n    providers: [     \r\n    ]\r\n})\r\nexport class MaterialModule {\r\n    constructor(public matIconRegistry: MatIconRegistry) {\r\n        // matIconRegistry.registerFontClassAlias('fontawesome', 'fa');\r\n    }\r\n\r\n    /*static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: MaterialModule,\r\n            providers: [MatIconRegistry]\r\n        };\r\n    }*/\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { httpFactory } from '@angular/http/src/http_module';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class StockDataService {\r\n    \r\n    constructor (private http : HttpClient) {}\r\n    stockPrices: string[];\r\n    public getStockPrices(stock, toDate, fromDate) : Observable<Promise<IStockDataRow[]>>{\r\n        var url = this.getYahooUrl(stock, toDate, fromDate);\r\n        return <Observable<Promise<IStockDataRow[]>>> this.http.get(url, { responseType: 'blob' }).pipe(map(blob => {\r\n            return this.awaitStockPrices(this.readInputAsText(blob));\r\n        }));\r\n    }\r\n\r\n    async awaitStockPrices(p : Promise<string>) : Promise<IStockDataRow[]>{\r\n        var str = await p;\r\n        // remove the first row\r\n        var stockData = str.split('\\n').slice(1);\r\n        var stockPrices : IStockDataRow[] = [];\r\n        for (var row of stockData) {\r\n            stockPrices.push({date: new Date(row.split(',')[0]), price: parseInt(row.split(',')[4])});\r\n        }\r\n        return stockPrices;\r\n\r\n    }\r\n    public readInputAsText (input) : Promise<string>{\r\n        const temporaryFileReader = new FileReader();\r\n      \r\n        return new Promise((resolve, reject) => {\r\n          temporaryFileReader.onerror = () => {\r\n            temporaryFileReader.abort();\r\n            reject(new DOMException(\"Problem parsing input file.\"));\r\n          };\r\n      \r\n          temporaryFileReader.onload = () => {\r\n            resolve(temporaryFileReader.result.toString());\r\n          };\r\n          temporaryFileReader.readAsText(input);\r\n        });\r\n    };\r\n\r\n    public getStocks() : IStock[]{\r\n        return [\r\n            {name: \"S&P 500\", apiSymbol: '%5EGSPC', ticker: \"^GSPC\", earliestDate: new Date(\"1927/12/30\")},\r\n            {name: \"Vanguard Total Stock Market Index Fund\", apiSymbol: 'VTI', ticker: \"VTI\", earliestDate: new Date(\"2001/06/15\")},\r\n            {name: \"NASDAQ Composite\", apiSymbol: '%5EIXIC', ticker: \"^IXIC\", earliestDate: new Date(\"1971/02/04\")}\r\n        ];\r\n    }\r\n\r\n    getYahooUrl(stock: IStock, toDate : Date, fromDate: Date, interval: string = \"d\") : string{\r\n        //interval should be \"d\" for daily, \"mo\" for monthly\r\n        var proxy = \"//cors-anywhere.herokuapp.com/\";\r\n        var url = \"https://query1.finance.yahoo.com/v7/finance/download/\";\r\n        url += stock.apiSymbol;\r\n        url += \"?period1=\";\r\n        url += fromDate.getTime() / 1000;\r\n        url += \"&period2=\";\r\n        url += toDate.getTime() / 1000;\r\n        url += \"&interval=1\";\r\n        url += interval;\r\n        url += \"&events=history\";\r\n        console.log(url);\r\n        return proxy + url;\r\n        }\r\n\r\n}\r\n\r\nexport interface IStock {\r\n    name: string,\r\n    apiSymbol: string,\r\n    ticker: string,\r\n    earliestDate: Date\r\n  }\r\nexport interface IStockDataRow {\r\n    date: Date,\r\n    price: number\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}