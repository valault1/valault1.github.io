{"version":3,"sources":["logo.svg","cookie-generators/cookie-generators.js","resources/cookie.png","CookieClicker.jsx","App.js","reportWebVitals.js","index.js"],"names":["generators","name","initialCost","cookiesPerSecond","costFactor","number","CookieClicker","React","useState","score","setScore","originalGenerators","setGenerators","getCPS","scoreIncrease","generator","getCPSWithNewGenerator","callback","delay","savedCallback","useRef","useEffect","current","tick","id","setInterval","clearInterval","useInterval","prevScore","generateCookies","getGeneratorCost","round","n","Math","className","alt","src","cookieImagePath","onClick","style","width","height","map","index","Grid","container","directon","justify","alignItems","item","md","xs","List","Card","ListItem","ListItemText","primary","secondary","ListItemSecondaryAction","color","generatorsCopy","i","getGenerator","Button","variant","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2787660d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const generators= [\r\n  {\r\n    name:\"Grandma\",\r\n    initialCost:10,\r\n    cookiesPerSecond:1,\r\n    costFactor:1.1,\r\n    number: 0\r\n  },\r\n  {\r\n    name:\"Machine\",\r\n    initialCost:75,\r\n    cookiesPerSecond:4,\r\n    costFactor:1.07,\r\n    number:0\r\n  },\r\n  {\r\n    name:\"Factory\",\r\n    initialCost:300,\r\n    cookiesPerSecond:30,\r\n    costFactor:1.1,\r\n    number: 0\r\n  },\r\n  {\r\n    name:\"Cookie Plantation\",\r\n    initialCost:2000,\r\n    cookiesPerSecond:100,\r\n    costFactor:1.1,\r\n    number: 0\r\n  },\r\n  {\r\n    name:\"Great-Grandma\",\r\n    initialCost:9800,\r\n    cookiesPerSecond:600,\r\n    costFactor:1.1,\r\n    number: 0\r\n}\r\n]\r\n;\r\n\r\n","export default __webpack_public_path__ + \"static/media/cookie.8560bb79.png\";","import React from \"react\";\r\nimport { generators as originalGenerators } from \"./cookie-generators/cookie-generators\";\r\nimport {\r\n  ListItem,\r\n  List,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport cookieImagePath from \"./resources/cookie.png\";\r\n\r\nexport default function CookieClicker() {\r\n  const defaultNumDecimalPlaces = 2;\r\n  const [score, setScore] = React.useState(0);\r\n  const [generators, setGenerators] = React.useState(originalGenerators);\r\n\r\n  const getCPS = () => {\r\n    var scoreIncrease = 0;\r\n    for (var generator of generators) {\r\n      scoreIncrease += generator.number * generator.cookiesPerSecond;\r\n    }\r\n    return scoreIncrease;\r\n  };\r\n\r\n  const getCPSWithNewGenerator = (generator) => {\r\n    return getCPS() + generator.cookiesPerSecond;\r\n  };\r\n  const generateCookies = () => {\r\n    var scoreIncrease = getCPS();\r\n\r\n    setScore((prevScore) => prevScore + scoreIncrease);\r\n  };\r\n\r\n  useInterval(() => {\r\n    generateCookies();\r\n  }, 1000);\r\n\r\n  const getCookie = () => {\r\n    setScore((prevScore) => prevScore + 1);\r\n  };\r\n\r\n  const getGenerator = (generator) => {\r\n    if (score < getGeneratorCost(generator)) return;\r\n    setScore((prevScore) => prevScore - getGeneratorCost(generator));\r\n    var generatorsCopy = [...generators];\r\n    var index = 0;\r\n    for (var i in generatorsCopy) {\r\n      if (generators[i].name === generator.name) {\r\n        index = i;\r\n      }\r\n    }\r\n    generatorsCopy[index].number += 1;\r\n    setGenerators(generatorsCopy);\r\n  };\r\n\r\n  const getGeneratorCost = (generator) => {\r\n    return generator.costFactor ** generator.number * generator.initialCost;\r\n  };\r\n\r\n  const round = (number, n = defaultNumDecimalPlaces) => {\r\n    return Math.round((number * 10 ** n) / 10 ** n);\r\n  };\r\n\r\n  ////\r\n  //this.interval = setInterval(() => this.setState({ time: Date.now() }), 1000);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Cookie Clicker</h1>\r\n      cookies: {round(score)} <br />\r\n      <img\r\n        alt=\"cookie\"\r\n        src={cookieImagePath}\r\n        onClick={getCookie}\r\n        style={{ width: 200, height: 200 }}\r\n      ></img>\r\n      <br />\r\n      <label>Cookies per second: {getCPS()}</label>\r\n      <br />\r\n      {generators.map((generator, index) => {\r\n        return (\r\n          <div>\r\n            <br />\r\n            <Grid\r\n              container\r\n              directon=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item md={3} xs={9}>\r\n                <List>\r\n                  <Card>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary={\r\n                          \"buy a \" +\r\n                          generator.name +\r\n                          \" (costs \" +\r\n                          round(getGeneratorCost(generator)) +\r\n                          \" cookies.)\"\r\n                        }\r\n                        secondary={\r\n                          \"Generates \" +\r\n                          generator.cookiesPerSecond +\r\n                          \" cookies every second. owned: \" +\r\n                          generator.number\r\n                        }\r\n                      ></ListItemText>\r\n\r\n                      <ListItemSecondaryAction>\r\n                        {getGeneratorCost(generator) > score ? (\r\n                          <label style={{ color: \"gray\" }}>\r\n                            NOT ENOUGH COOKIES\r\n                          </label>\r\n                        ) : (\r\n                          <label onClick={() => getGenerator(generator)}>\r\n                            <Button variant=\"contained\">\r\n                              BUY (-{round(getGeneratorCost(generator))} cookies\r\n                              )\r\n                            </Button>{\" \"}\r\n                            <br />\r\n                            new CPS: {getCPSWithNewGenerator(generator)}\r\n                          </label>\r\n                        )}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  </Card>\r\n                </List>\r\n              </Grid>\r\n            </Grid>\r\n            <br />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = React.useRef();\r\n\r\n  // Remember the latest function.\r\n  React.useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport CookieClicker from './CookieClicker';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CookieClicker></CookieClicker>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}